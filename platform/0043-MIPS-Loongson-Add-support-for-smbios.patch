From eba6f8463be20c747a58aa70dc3f68a8dc4bfe3f Mon Sep 17 00:00:00 2001
From: Huacai Chen <chenhc@lemote.com>
Date: Wed, 6 Nov 2013 15:19:11 +0800
Subject: [PATCH 043/130] MIPS: Loongson: Add support for smbios

Firmware pass the address of smbios to kernel by memmap, dmidecode
applications parsing "/proc/efi/systab".

Change-Id: I0d9dcfe01bb0d37a3d2b9b8d074c2602cce36abe
Signed-off-by: Huacai Chen <chenhc@lemote.com>
Signed-off-by: Zhang Shuangshuang <zhangshuangshuang@ict.ac.cn>
---
 arch/mips/loongson64/common/Makefile   |  2 +-
 arch/mips/loongson64/common/efi.c      | 98 ++++++++++++++++++++++++++++++++++
 arch/mips/loongson64/common/env.c      |  2 +
 arch/mips/loongson64/common/mem.c      |  9 ++++
 arch/mips/loongson64/loongson-3/numa.c | 10 ++++
 5 files changed, 120 insertions(+), 1 deletion(-)
 create mode 100644 arch/mips/loongson64/common/efi.c

diff --git a/arch/mips/loongson64/common/Makefile b/arch/mips/loongson64/common/Makefile
index 074d9cb1..7838e345 100644
--- a/arch/mips/loongson64/common/Makefile
+++ b/arch/mips/loongson64/common/Makefile
@@ -3,7 +3,7 @@
 #
 
 obj-y += setup.o init.o cmdline.o env.o time.o reset.o irq.o \
-    bonito-irq.o mem.o machtype.o platform.o serial.o
+    bonito-irq.o mem.o machtype.o platform.o serial.o efi.o
 obj-$(CONFIG_PCI) += pci.o
 
 #
diff --git a/arch/mips/loongson64/common/efi.c b/arch/mips/loongson64/common/efi.c
new file mode 100644
index 00000000..cc2e0c6f
--- /dev/null
+++ b/arch/mips/loongson64/common/efi.c
@@ -0,0 +1,98 @@
+#include <linux/fs.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/proc_fs.h>
+#include <linux/seq_file.h>
+
+struct proc_dir_entry *proc_efi;
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
+static int show_systab(struct seq_file *m, void *v)
+{
+	seq_printf(m, "SMBIOS=0x%lx\n", systab_addr);
+
+	return 0;
+}
+
+static void *systab_start(struct seq_file *m, loff_t *pos)
+{
+	unsigned long i = *pos;
+
+	return i ? NULL : (void *)0x1;
+}
+
+static void *systab_next(struct seq_file *m, void *v, loff_t *pos)
+{
+	++*pos;
+
+	return systab_start(m, pos);
+}
+
+static void systab_stop(struct seq_file *m, void *v)
+{
+}
+
+const struct seq_operations systab_op = {
+	.start	= systab_start,
+	.next	= systab_next,
+	.stop	= systab_stop,
+	.show	= show_systab,
+};
+
+
+static int systab_open(struct inode *inode, struct file *file)
+
+{
+	return seq_open(file, &systab_op);
+}
+
+static const struct file_operations proc_systab_operations = {
+	.open		= systab_open,
+	.read		= seq_read,
+	.llseek		= seq_lseek,
+	.release	= seq_release,
+};
+
+/**
+  * efi_init_procfs - Create efi in procfs
+  */
+int __init efi_init_procfs(void)
+{
+	proc_efi = proc_mkdir("efi", NULL);
+	if(!proc_efi)
+		return -ENOMEM;
+
+	if(!proc_create("systab", 0, proc_efi, &proc_systab_operations))
+		return -ENOMEM;
+
+	return 0;
+}
+
+/**
+  * efi_exit_procfs - Remove efi from procfs
+  */
+void __exit efi_exit_procfs(void)
+{
+	remove_proc_entry("systab", proc_efi);
+	remove_proc_entry("efi", NULL);
+}
+
+static int __init init_efi(void)
+{
+	if (!has_systab)
+		return 0;
+	else
+		return efi_init_procfs();
+}
+
+static void __exit exit_efi(void)
+{
+	if (!has_systab)
+		return;
+	else
+		efi_exit_procfs();
+}
+
+subsys_initcall(init_efi);
+module_exit(exit_efi);
diff --git a/arch/mips/loongson64/common/env.c b/arch/mips/loongson64/common/env.c
index 18904788..a1b939a6 100644
--- a/arch/mips/loongson64/common/env.c
+++ b/arch/mips/loongson64/common/env.c
@@ -33,6 +33,8 @@ u64 loongson_chiptemp[MAX_PACKAGES];
 u64 loongson_freqctrl[MAX_PACKAGES];
 
 unsigned long long smp_group[4];
+unsigned int has_systab = 0;
+unsigned long systab_addr;
 
 #define parse_even_earlier(res, option, p)				\
 do {									\
diff --git a/arch/mips/loongson64/common/mem.c b/arch/mips/loongson64/common/mem.c
index b01d5247..788f4426 100644
--- a/arch/mips/loongson64/common/mem.c
+++ b/arch/mips/loongson64/common/mem.c
@@ -56,6 +56,9 @@ void __init prom_init_memory(void)
 
 #else /* CONFIG_LEFI_FIRMWARE_INTERFACE */
 
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
 void __init prom_init_memory(void)
 {
 	int i;
@@ -84,6 +87,12 @@ void __init prom_init_memory(void)
 					(u64)loongson_memmap->map[i].mem_size << 20,
 					BOOT_MEM_RESERVED);
 				break;
+			case SMBIOS_TABLE:
+				has_systab = 1;
+				systab_addr = loongson_memmap->map[i].mem_start;
+				add_memory_region(loongson_memmap->map[i].mem_start,
+					0x2000, BOOT_MEM_RESERVED);
+				break;
 			}
 		}
 	}
diff --git a/arch/mips/loongson64/loongson-3/numa.c b/arch/mips/loongson64/loongson-3/numa.c
index 282c5a8c..250f58f1 100644
--- a/arch/mips/loongson64/loongson-3/numa.c
+++ b/arch/mips/loongson64/loongson-3/numa.c
@@ -121,6 +121,9 @@ static unsigned long nid_to_addroffset(unsigned int nid)
 	return result;
 }
 
+extern unsigned int has_systab;
+extern unsigned long systab_addr;
+
 static void __init szmem(unsigned int node)
 {
 	u32 i, mem_type;
@@ -174,6 +177,13 @@ static void __init szmem(unsigned int node)
 			memblock_reserve(((node_id << 44) + mem_start),
 				mem_size << 20);
 			break;
+		case SMBIOS_TABLE:
+			has_systab = 1;
+			systab_addr = mem_start;
+			add_memory_region((node_id << 44) + mem_start,
+				0x2000, BOOT_MEM_RESERVED);
+			memblock_reserve(((node_id << 44) + mem_start), 0x2000);
+			break;
 		}
 	}
 }
-- 
2.11.0

