From 85b8a22a531c3379ad28d707979f6ce06db7a9eb Mon Sep 17 00:00:00 2001
From: chenj <chenj@lemote.com>
Date: Mon, 24 Feb 2014 14:38:11 +0800
Subject: [PATCH 076/130] Optimize copy_page

arch/mips/mm/uasm-mips.c modified by Junde Yhi.

Change-Id: I663621c68a361981d510a53aba2c756598eaf1df
Signed-off-by: Zhang Shuangshuang <zhangshuangshuang@ict.ac.cn>
---
 arch/mips/include/asm/uasm.h      |  1 +
 arch/mips/include/uapi/asm/inst.h |  7 +++++++
 arch/mips/mm/page.c               | 13 +++++++++++++
 arch/mips/mm/uasm-mips.c          |  1 +
 arch/mips/mm/uasm.c               |  3 ++-
 5 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/arch/mips/include/asm/uasm.h b/arch/mips/include/asm/uasm.h
index e8797fe3..4a5c07c5 100644
--- a/arch/mips/include/asm/uasm.h
+++ b/arch/mips/include/asm/uasm.h
@@ -155,6 +155,7 @@ Ip_u2s3u1(_sc);
 Ip_u2s3u1(_scd);
 Ip_u2s3u1(_sd);
 Ip_u4u2u1s3(_gssq);
+Ip_u4u2u1s3(_gslq);
 Ip_u2u1u3(_sll);
 Ip_u3u2u1(_sllv);
 Ip_s3s1s2(_slt);
diff --git a/arch/mips/include/uapi/asm/inst.h b/arch/mips/include/uapi/asm/inst.h
index 904a7ca5..139ff038 100644
--- a/arch/mips/include/uapi/asm/inst.h
+++ b/arch/mips/include/uapi/asm/inst.h
@@ -100,6 +100,13 @@ enum swc2_op {
 };

 /*
+ * func field of spec opcode.
+ */
+enum lwc2_op {
+	gslq_op = 0x20,
+};
+
+/*
  * rt field of bcond opcodes.
  */
 enum rt_op {
diff --git a/arch/mips/mm/page.c b/arch/mips/mm/page.c
index 6ab08061..7f8110b6 100644
--- a/arch/mips/mm/page.c
+++ b/arch/mips/mm/page.c
@@ -47,6 +47,10 @@
 #define T1 9
 #define T2 10
 #define T3 11
+#define T4 12
+#define T5 13
+#define T6 14
+#define T7 15
 #define T9 25
 #define RA 31

@@ -222,6 +226,7 @@ static void set_prefetch_parameters(void)

 #ifdef CONFIG_CPU_LOONGSON3
 	clear_word_size = 16;
+	copy_word_size = 16;
 #endif

 	/*
@@ -376,20 +381,28 @@ void build_clear_page(void)

 static void build_copy_load(u32 **buf, int reg, int off)
 {
+#ifdef CONFIG_CPU_LOONGSON3
+	uasm_i_gslq(buf, reg, reg+4, off, A1);
+#else
 	if (cpu_has_64bit_gp_regs) {
 		uasm_i_ld(buf, reg, off, A1);
 	} else {
 		uasm_i_lw(buf, reg, off, A1);
 	}
+#endif
 }

 static void build_copy_store(u32 **buf, int reg, int off)
 {
+#ifdef CONFIG_CPU_LOONGSON3
+	uasm_i_gssq(buf, reg, reg+4, off, A0);
+#else
 	if (cpu_has_64bit_gp_regs) {
 		uasm_i_sd(buf, reg, off, A0);
 	} else {
 		uasm_i_sw(buf, reg, off, A0);
 	}
+#endif
 }

 static inline void build_copy_load_pref(u32 **buf, int off)
diff --git a/arch/mips/mm/uasm-mips.c b/arch/mips/mm/uasm-mips.c
index 8e856e89..834a7992 100644
--- a/arch/mips/mm/uasm-mips.c
+++ b/arch/mips/mm/uasm-mips.c
@@ -160,6 +160,7 @@ static struct insn insn_table[] = {
 	{ insn_ldpte, M(lwc2_op, 0, 0, 0, ldpte_op, mult_op), RS | RD },
 	{ insn_lddir, M(lwc2_op, 0, 0, 0, lddir_op, mult_op), RS | RT | RD },
 	{ insn_gssq, M(swc2_op, 0, 0, 0, 0, gssq_op), RT | RS | RZ | RC },
+	{ insn_gslq, M(lwc2_op, 0, 0, 0, 0, gslq_op), RT | RS | RZ | RC },
 	{ insn_invalid, 0, 0 }
 };

diff --git a/arch/mips/mm/uasm.c b/arch/mips/mm/uasm.c
index a690d75f..101c384f 100644
--- a/arch/mips/mm/uasm.c
+++ b/arch/mips/mm/uasm.c
@@ -62,7 +62,7 @@ enum opcode {
 	insn_sllv, insn_slt, insn_sltiu, insn_sltu, insn_sra, insn_srl,
 	insn_srlv, insn_subu, insn_sw, insn_sync, insn_syscall, insn_tlbp,
 	insn_tlbr, insn_tlbwi, insn_tlbwr, insn_wait, insn_wsbh, insn_xor,
-	insn_xori, insn_yield, insn_lddir, insn_ldpte, insn_gssq,
+	insn_xori, insn_yield, insn_lddir, insn_ldpte, insn_gssq, insn_gslq,
 };

 struct insn {
@@ -318,6 +318,7 @@ I_u2s3u1(_sc)
 I_u2s3u1(_scd)
 I_u2s3u1(_sd)
 I_u4u2u1s3(_gssq)
+I_u4u2u1s3(_gslq)
 I_u2u1u3(_sll)
 I_u3u2u1(_sllv)
 I_s3s1s2(_slt)
--
2.11.0
